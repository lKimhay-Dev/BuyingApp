{"version":3,"file":"calendar.modal.js","sources":["calendar.modal.js"],"names":[],"mappingsgCAKO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAsB;AACtB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar angular_1 = require(\"@ionic/angular\");\r\nvar calendar_service_1 = require(\"../services/calendar.service\");\r\nvar moment_ = require(\"moment\");\r\nvar moment = moment_;\r\nvar config_1 = require(\"../config\");\r\nvar CalendarModal = /** @class */ (function () {\r\n    function CalendarModal(_renderer, _elementRef, params, ref, modalCtrl, calSvc) {\r\n        this._renderer = _renderer;\r\n        this._elementRef = _elementRef;\r\n        this.params = params;\r\n        this.ref = ref;\r\n        this.modalCtrl = modalCtrl;\r\n        this.calSvc = calSvc;\r\n        this.datesTemp = [null, null];\r\n        this._s = true;\r\n    }\r\n    CalendarModal.prototype.ngOnInit = function () {\r\n        this.init();\r\n        this.initDefaultDate();\r\n    };\r\n    CalendarModal.prototype.ngAfterViewInit = function () {\r\n        this.findCssClass();\r\n        if (this._d.canBackwardsSelected)\r\n            this.backwardsMonth();\r\n        this.scrollToDefaultDate();\r\n    };\r\n    CalendarModal.prototype.init = function () {\r\n        this._d = this.calSvc.safeOpt(this.params.data.modal.options);\r\n        this._d.showAdjacentMonthDay = false;\r\n        this.step = this._d.step;\r\n        if (this.step < 1) {\r\n            this.step = 1;\r\n        }\r\n        this.calendarMonths = this.calSvc.createMonthsByPeriod(moment(this._d.from).valueOf(), this.findInitMonthNumber(this._d.defaultScrollTo) + this.step, this._d);\r\n    };\r\n    CalendarModal.prototype.initDefaultDate = function () {\r\n        var _this = this;\r\n        var _a = this._d, pickMode = _a.pickMode, defaultDate = _a.defaultDate, defaultDateRange = _a.defaultDateRange, defaultDates = _a.defaultDates;\r\n        switch (pickMode) {\r\n            case config_1.pickModes.SINGLE:\r\n                if (defaultDate) {\r\n                    this.datesTemp[0] = this.calSvc.createCalendarDay(this._getDayTime(defaultDate), this._d);\r\n                }\r\n                break;\r\n            case config_1.pickModes.RANGE:\r\n                if (defaultDateRange) {\r\n                    if (defaultDateRange.from) {\r\n                        this.datesTemp[0] = this.calSvc.createCalendarDay(this._getDayTime(defaultDateRange.from), this._d);\r\n                    }\r\n                    if (defaultDateRange.to) {\r\n                        this.datesTemp[1] = this.calSvc.createCalendarDay(this._getDayTime(defaultDateRange.to), this._d);\r\n                    }\r\n                }\r\n                break;\r\n            case config_1.pickModes.MULTI:\r\n                if (defaultDates && defaultDates.length) {\r\n                    this.datesTemp = defaultDates.map(function (e) { return _this.calSvc.createCalendarDay(_this._getDayTime(e), _this._d); });\r\n                }\r\n                break;\r\n            default:\r\n                this.datesTemp = [null, null];\r\n        }\r\n    };\r\n    CalendarModal.prototype.findCssClass = function () {\r\n        var _this = this;\r\n        var cssClass = this._d.cssClass;\r\n        if (cssClass) {\r\n            cssClass.split(' ').forEach(function (_class) {\r\n                if (_class.trim() !== '')\r\n                    _this._renderer.addClass(_this._elementRef.nativeElement, _class);\r\n            });\r\n        }\r\n    };\r\n    CalendarModal.prototype.onChange = function (data) {\r\n        var _a = this._d, pickMode = _a.pickMode, autoDone = _a.autoDone;\r\n        this.datesTemp = data;\r\n        this.ref.detectChanges();\r\n        if (pickMode !== config_1.pickModes.MULTI && autoDone && this.canDone()) {\r\n            this.done();\r\n        }\r\n    };\r\n    CalendarModal.prototype.onCancel = function () {\r\n        this.modalCtrl.dismiss(null, 'cancel');\r\n    };\r\n    CalendarModal.prototype.done = function () {\r\n        var pickMode = this._d.pickMode;\r\n        this.modalCtrl.dismiss(this.calSvc.wrapResult(this.datesTemp, pickMode), 'done');\r\n    };\r\n    CalendarModal.prototype.canDone = function () {\r\n        if (!Array.isArray(this.datesTemp)) {\r\n            return false;\r\n        }\r\n        var pickMode = this._d.pickMode;\r\n        switch (pickMode) {\r\n            case config_1.pickModes.SINGLE:\r\n                return !!(this.datesTemp[0] && this.datesTemp[0].time);\r\n            case config_1.pickModes.RANGE:\r\n                return !!(this.datesTemp[0] && this.datesTemp[1]) && !!(this.datesTemp[0].time && this.datesTemp[1].time);\r\n            case config_1.pickModes.MULTI:\r\n                return this.datesTemp.length > 0 && this.datesTemp.every(function (e) { return !!e && !!e.time; });\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n    CalendarModal.prototype.nextMonth = function (event) {\r\n        var _a;\r\n        var infiniteScroll = event.target;\r\n        this.infiniteScroll = infiniteScroll;\r\n        var len = this.calendarMonths.length;\r\n        var final = this.calendarMonths[len - 1];\r\n        var nextTime = moment(final.original.time).add(1, 'M').valueOf();\r\n        var rangeEnd = this._d.to ? moment(this._d.to).subtract(1, 'M') : 0;\r\n        if (len <= 0 || (rangeEnd !== 0 && moment(final.original.time).isAfter(rangeEnd))) {\r\n            infiniteScroll.disabled = true;\r\n            return;\r\n        }\r\n        (_a = this.calendarMonths).push.apply(_a, this.calSvc.createMonthsByPeriod(nextTime, 1, this._d));\r\n        infiniteScroll.complete();\r\n    };\r\n    CalendarModal.prototype.backwardsMonth = function () {\r\n        var _a;\r\n        var first = this.calendarMonths[0];\r\n        if (first.original.time <= 0) {\r\n            this._d.canBackwardsSelected = false;\r\n            return;\r\n        }\r\n        var firstTime = this.actualFirstTime = moment(first.original.time).subtract(1, 'M').valueOf();\r\n        (_a = this.calendarMonths).unshift.apply(_a, this.calSvc.createMonthsByPeriod(firstTime, 1, this._d));\r\n        this.ref.detectChanges();\r\n    };\r\n    CalendarModal.prototype.scrollToDate = function (date) {\r\n        var defaultDateIndex = this.findInitMonthNumber(date);\r\n        var monthElement = this.monthsEle.nativeElement.children[\"month-\" + defaultDateIndex];\r\n        var defaultDateMonth = monthElement ? monthElement.offsetTop : 0;\r\n        if (defaultDateIndex === -1 || defaultDateMonth === 0)\r\n            return;\r\n        this.content.scrollToPoint(0, defaultDateMonth, 128);\r\n    };\r\n    CalendarModal.prototype.scrollToDefaultDate = function () {\r\n        this.scrollToDate(this._d.defaultScrollTo);\r\n    };\r\n    CalendarModal.prototype.onScroll = function ($event) {\r\n        var _this = this;\r\n        if (!this._d.canBackwardsSelected)\r\n            return;\r\n        if ($event.scrollTop <= 200 && $event.directionY === \"up\" && this._s) {\r\n            this._s = !1;\r\n            this.content.getScrollElement().then(function (el) {\r\n                var lastHeight = el.scrollHeight;\r\n                setTimeout(function () {\r\n                    _this.backwardsMonth();\r\n                    _this.content.getScrollElement().then(function (el) {\r\n                        var nowHeight = el.scrollHeight;\r\n                        _this.content.scrollToPoint(0, nowHeight - lastHeight, 0)\r\n                            .then(function () {\r\n                            _this._s = !0;\r\n                        });\r\n                    });\r\n                }, 180);\r\n            });\r\n        }\r\n    };\r\n    CalendarModal.prototype.findInitMonthNumber = function (date) {\r\n        var startDate = this.actualFirstTime ? moment(this.actualFirstTime) : moment(this._d.from);\r\n        var defaultScrollTo = moment(date);\r\n        var isAfter = defaultScrollTo.isAfter(startDate);\r\n        if (!isAfter)\r\n            return -1;\r\n        if (this.showYearPicker) {\r\n            startDate = moment(new Date(this.year, 0, 1));\r\n        }\r\n        return defaultScrollTo.diff(startDate, 'month');\r\n    };\r\n    CalendarModal.prototype._getDayTime = function (date) {\r\n        return moment(moment(date).format('YYYY-MM-DD')).valueOf();\r\n    };\r\n    CalendarModal.prototype._monthFormat = function (date) {\r\n        return moment(date).format(this._d.monthFormat.replace(/y/g, 'Y'));\r\n    };\r\n    CalendarModal.prototype.trackByIndex = function (index, moment) {\r\n        return moment.original ? moment.original.time : index;\r\n    };\r\n    __decorate([\r\n        core_1.ViewChild(angular_1.IonContent),\r\n        __metadata(\"design:type\", angular_1.IonContent)\r\n    ], CalendarModal.prototype, \"content\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('months'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], CalendarModal.prototype, \"monthsEle\", void 0);\r\n    CalendarModal = __decorate([\r\n        core_1.Component({\r\n            selector: 'ion-calendar-modal',\r\n            template: \"\\n    <ion-header>\\n      <ion-toolbar [color]=\\\"_d.color\\\">\\n\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-button type='button' icon-only fill=\\\"clear\\\" (click)=\\\"onCancel()\\\">\\n            <span *ngIf=\\\"_d.closeLabel !== '' && !_d.closeIcon\\\">{{_d.closeLabel}}</span>\\n            <ion-icon *ngIf=\\\"_d.closeIcon\\\" name=\\\"close\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>{{_d.title}}</ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n          <ion-button type='button' icon-only *ngIf=\\\"!_d.autoDone\\\" fill=\\\"clear\\\" [disabled]=\\\"!canDone()\\\" (click)=\\\"done()\\\">\\n            <span *ngIf=\\\"_d.doneLabel !== '' && !_d.doneIcon\\\">{{_d.doneLabel}}</span>\\n            <ion-icon *ngIf=\\\"_d.doneIcon\\\" name=\\\"checkmark\\\"></ion-icon>\\n          </ion-button>\\n\\n        </ion-buttons>\\n\\n      </ion-toolbar>\\n      \\n      <ng-content select=\\\"[sub-header]\\\"></ng-content>\\n\\n      <ion-calendar-week\\n        [color]=\\\"_d.color\\\"\\n        [weekArray]=\\\"_d.weekdays\\\"\\n        [weekStart]=\\\"_d.weekStart\\\">\\n      </ion-calendar-week>\\n\\n    </ion-header>\\n\\n    <ion-content scrollEvents=true (ionScroll)=\\\"onScroll($event)\\\" class=\\\"calendar-page\\\"\\n                 [ngClass]=\\\"{'multi-selection': _d.pickMode === 'multi'}\\\">\\n\\n      <div #months>\\n        <ng-template ngFor let-month [ngForOf]=\\\"calendarMonths\\\" [ngForTrackBy]=\\\"trackByIndex\\\" let-i=\\\"index\\\">\\n          <div class=\\\"month-box\\\" [attr.id]=\\\"'month-' + i\\\">\\n            <h4 class=\\\"text-center month-title\\\">{{_monthFormat(month.original.date)}}</h4>\\n            <ion-calendar-month [month]=\\\"month\\\"\\n                                [pickMode]=\\\"_d.pickMode\\\"\\n                                [isSaveHistory]=\\\"_d.isSaveHistory\\\"\\n                                [id]=\\\"_d.id\\\"\\n                                [color]=\\\"_d.color\\\"\\n                                (onChange)=\\\"onChange($event)\\\"\\n                                [(ngModel)]=\\\"datesTemp\\\">\\n\\n            </ion-calendar-month>\\n          </div>\\n        </ng-template>\\n\\n      </div>\\n\\n      <ion-infinite-scroll (ionInfinite)=\\\"nextMonth($event)\\\">\\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\\n      </ion-infinite-scroll>\\n\\n    </ion-content>\\n  \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.Renderer2,\r\n            core_1.ElementRef,\r\n            angular_1.NavParams,\r\n            core_1.ChangeDetectorRef,\r\n            angular_1.ModalController,\r\n            calendar_service_1.CalendarService])\r\n    ], CalendarModal);\r\n    return CalendarModal;\r\n}());\r\nexports.CalendarModal = CalendarModal;\r\n"]}