{"version":3,"file":"calendar.component.d.ts","sources":["calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, Provider } from '@angular/core';\r\nimport { CalendarMonth, CalendarModalOptions, CalendarComponentOptions, CalendarDay, CalendarComponentPayloadTypes, CalendarComponentMonthChange, CalendarComponentTypeProperty } from '../calendar.model';\r\nimport { CalendarService } from \"../services/calendar.service\";\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const ION_CAL_VALUE_ACCESSOR: Provider;\r\nexport declare class CalendarComponent implements ControlValueAccessor, OnInit {\r\n    calSvc: CalendarService;\r\n    _d: CalendarModalOptions;\r\n    _options: CalendarComponentOptions;\r\n    _view: 'month' | 'days';\r\n    _calendarMonthValue: CalendarDay[];\r\n    _showToggleButtons: boolean;\r\n    showToggleButtons: boolean;\r\n    _showMonthPicker: boolean;\r\n    showMonthPicker: boolean;\r\n    monthOpt: CalendarMonth;\r\n    format: string;\r\n    type: CalendarComponentTypeProperty;\r\n    readonly: boolean;\r\n    onChange: EventEmitter<CalendarComponentPayloadTypes>;\r\n    monthChange: EventEmitter<CalendarComponentMonthChange>;\r\n    onSelect: EventEmitter<CalendarDay>;\r\n    onSelectStart: EventEmitter<CalendarDay>;\r\n    onSelectEnd: EventEmitter<CalendarDay>;\r\n    options: CalendarComponentOptions;\r\n    constructor(calSvc: CalendarService);\r\n    ngOnInit(): void;\r\n    getViewDate(): CalendarComponentPayloadTypes;\r\n    setViewDate(value: CalendarComponentPayloadTypes): void;\r\n    switchView(): void;\r\n    prev(): void;\r\n    next(): void;\r\n    prevYear(): void;\r\n    nextYear(): void;\r\n    nextMonth(): void;\r\n    canNext(): boolean;\r\n    backMonth(): void;\r\n    canBack(): boolean;\r\n    monthOnSelect(month: number): void;\r\n    onChanged($event: CalendarDay[]): void;\r\n    swipeEvent($event: any): void;\r\n    _onChanged: Function;\r\n    _onTouched: Function;\r\n    _payloadToTimeNumber(value: CalendarComponentPayloadTypes): number;\r\n    _monthFormat(date: number): string;\r\n    private initOpt;\r\n    private createMonth;\r\n    private _createCalendarDay;\r\n    private _handleType;\r\n    writeValue(obj: any): void;\r\n    registerOnChange(fn: () => {}): void;\r\n    registerOnTouched(fn: () => {}): void;\r\n    private _writeValue;\r\n}\r\n"]}