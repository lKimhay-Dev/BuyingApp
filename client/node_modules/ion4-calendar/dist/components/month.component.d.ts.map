{"version":3,"file":"month.component.d.ts","sources":["month.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { CalendarDay, CalendarMonth, CalendarOriginal, PickMode } from '../calendar.model';\r\nexport declare const MONTH_VALUE_ACCESSOR: any;\r\nexport declare class MonthComponent implements ControlValueAccessor, AfterViewInit {\r\n    ref: ChangeDetectorRef;\r\n    month: CalendarMonth;\r\n    pickMode: PickMode;\r\n    isSaveHistory: boolean;\r\n    id: any;\r\n    readonly: boolean;\r\n    color: string;\r\n    onChange: EventEmitter<CalendarDay[]>;\r\n    onSelect: EventEmitter<CalendarDay>;\r\n    onSelectStart: EventEmitter<CalendarDay>;\r\n    onSelectEnd: EventEmitter<CalendarDay>;\r\n    _date: Array<CalendarDay | null>;\r\n    _isInit: boolean;\r\n    _onChanged: Function;\r\n    _onTouched: Function;\r\n    readonly _isRange: boolean;\r\n    constructor(ref: ChangeDetectorRef);\r\n    ngAfterViewInit(): void;\r\n    writeValue(obj: any): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    trackByTime(index: number, item: CalendarOriginal): number;\r\n    isEndSelection(day: CalendarDay): boolean;\r\n    isBetween(day: CalendarDay): boolean;\r\n    isStartSelection(day: CalendarDay): boolean;\r\n    isSelected(time: number): boolean;\r\n    onSelected(item: CalendarDay): void;\r\n}\r\n"]}