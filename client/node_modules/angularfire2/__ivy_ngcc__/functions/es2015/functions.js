import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';
import { from } from 'rxjs';
import { map } from 'rxjs/operators';
import { FirebaseOptionsToken, FirebaseNameOrConfigToken, _firebaseAppFactory, FirebaseZoneScheduler } from 'angularfire2';
import * as ɵngcc0 from '@angular/core';
export class AngularFireFunctions {
    constructor(options, nameOrConfig, platformId, zone) {
        this.scheduler = new FirebaseZoneScheduler(zone, platformId);
        this.functions = zone.runOutsideAngular(() => {
            const app = _firebaseAppFactory(options, nameOrConfig);
            return app.functions();
        });
    }
    httpsCallable(name) {
        const callable = this.functions.httpsCallable(name);
        return (data) => {
            const callable$ = from(callable(data));
            return this.scheduler.runOutsideAngular(callable$.pipe(map(r => r.data)));
        };
    }
}
AngularFireFunctions.ɵfac = function AngularFireFunctions_Factory(t) { return new (t || AngularFireFunctions)(ɵngcc0.ɵɵinject(FirebaseOptionsToken), ɵngcc0.ɵɵinject(FirebaseNameOrConfigToken, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };
AngularFireFunctions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AngularFireFunctions, factory: AngularFireFunctions.ɵfac });
AngularFireFunctions.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [FirebaseOptionsToken,] },] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FirebaseNameOrConfigToken,] },] },
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },
    { type: NgZone, },
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireFunctions, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [FirebaseOptionsToken]
            }] }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [FirebaseNameOrConfigToken]
            }] }, { type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }, { type: ɵngcc0.NgZone }]; }, null); })();

//# sourceMappingURL=functions.js.map