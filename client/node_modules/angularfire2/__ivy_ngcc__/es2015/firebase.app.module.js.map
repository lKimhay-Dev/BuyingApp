{"version":3,"file":"firebase.app.module.js","sources":["../../../src/core/firebase.app.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0B,QAAQ,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAE3E,OAAO,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,MAAM,gBAAgB,CAAC;AAEjF,OAAO,QAAQ,MAAM,eAAe,CAAC;;AASrC,MAAM;AAAqB,CAW1B;AAED,MAAM,8BAA8B,OAAwB,EAAE,YAAyC;AACvG,IAAI,MAAM,IAAI,GAAG,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,IAAI,WAAW,CAAC;AACjF,IAAI,MAAM,MAAM,GAAG,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,IAAI,EAAE,CAAC;AAC1E,IAAI,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,IAAI,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,IAAI,MAAM,CAAC,CAAC,WAAW,IAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAgB,CAAC;AACnF,CAAC;AAED,MAAM,mBAAmB,GAAG;AAC5B,IAAI,OAAO,EAAE,WAAW;AACxB,IAAI,UAAU,EAAE,mBAAmB;AACnC,IAAI,IAAI,EAAE;AACV,QAAQ,oBAAoB;AAC5B,QAAQ,CAAC,IAAI,QAAQ,EAAE,EAAE,yBAAyB,CAAC;AACnD,KAAK;AACL,CAAC,CAAC;AAKF,MAAM;AACN,IAAI,MAAM,CAAC,aAAa,CAAC,OAAwB,EAAE,YAAyC;AAC5F,QAAQ,MAAM,CAAC;AACf,YAAY,QAAQ,EAAE,iBAAiB;AACvC,YAAY,SAAS,EAAE;AACvB,gBAAgB,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,OAAO,EAAE;AACpE,gBAAgB,EAAE,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAAE,YAAY,EAAE;AAC9E,aAAa;AACb,SAAS,CAAA;AACT,KAAK;AACL;6CAbC,QAAQ,SAAC;CACN,SAAS,EAAE,CAAE,mBAAmB,CAAE,eACrC;;;;;;0BACK;AAAC","sourcesContent":["import { InjectionToken, NgZone, NgModule, Optional } from '@angular/core';\n\nimport { FirebaseOptionsToken, FirebaseNameOrConfigToken } from './angularfire2';\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp as _FirebaseApp, FirebaseOptions, FirebaseAppConfig } from '@firebase/app-types';\nimport { FirebaseAuth } from '@firebase/auth-types';\nimport { FirebaseDatabase } from '@firebase/database-types';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseStorage } from '@firebase/storage-types';\nimport { FirebaseFirestore } from '@firebase/firestore-types';\nimport { FirebaseFunctions } from '@firebase/functions-types';\n\nexport class FirebaseApp implements _FirebaseApp {\n    name: string;\n    automaticDataCollectionEnabled: boolean;\n    options: {};\n    auth: () => FirebaseAuth;\n    database: (databaseURL?: string) => FirebaseDatabase;\n    messaging: () => FirebaseMessaging;\n    storage: (storageBucket?: string) => FirebaseStorage;\n    delete: () => Promise<void>;\n    firestore: () => FirebaseFirestore;\n    functions: () => FirebaseFunctions;\n}\n\nexport function _firebaseAppFactory(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    const existingApp = firebase.apps.filter(app => app.name === config.name)[0];\n    return (existingApp || firebase.initializeApp(options, config)) as FirebaseApp;\n}\n\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: _firebaseAppFactory,\n    deps: [\n        FirebaseOptionsToken,\n        [new Optional(), FirebaseNameOrConfigToken]\n    ]\n};\n \n@NgModule({\n    providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n    static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FirebaseOptionsToken, useValue: options },\n                { provide: FirebaseNameOrConfigToken, useValue: nameOrConfig }\n            ]\n        }\n    }\n}"]}