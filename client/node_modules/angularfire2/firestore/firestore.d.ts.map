{"version":3,"file":"firestore.d.ts","sources":["firestore.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport { FirebaseFirestore, CollectionReference, DocumentReference, Settings } from '@firebase/firestore-types';\nimport { Observable } from 'rxjs';\nimport { FirebaseOptions, FirebaseAppConfig } from '@firebase/app-types';\nimport { QueryFn, AssociatedReference } from './interfaces';\nimport { AngularFirestoreDocument } from './document/document';\nimport { AngularFirestoreCollection } from './collection/collection';\nimport { FirebaseZoneScheduler } from 'angularfire2';\nexport declare const EnablePersistenceToken: InjectionToken<boolean>;\nexport declare const FirestoreSettingsToken: InjectionToken<Settings>;\nexport declare const DefaultFirestoreSettings: Settings;\nexport declare function associateQuery(collectionRef: CollectionReference, queryFn?: (ref: any) => any): AssociatedReference;\nexport declare class AngularFirestore {\n    readonly firestore: FirebaseFirestore;\n    readonly persistenceEnabled$: Observable<boolean>;\n    readonly scheduler: FirebaseZoneScheduler;\n    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | undefined, shouldEnablePersistence: boolean, settings: Settings, platformId: Object, zone: NgZone);\n    collection<T>(path: string, queryFn?: QueryFn): AngularFirestoreCollection<T>;\n    collection<T>(ref: CollectionReference, queryFn?: QueryFn): AngularFirestoreCollection<T>;\n    doc<T>(path: string): AngularFirestoreDocument<T>;\n    doc<T>(ref: DocumentReference): AngularFirestoreDocument<T>;\n    createId(): string;\n}\n"]}