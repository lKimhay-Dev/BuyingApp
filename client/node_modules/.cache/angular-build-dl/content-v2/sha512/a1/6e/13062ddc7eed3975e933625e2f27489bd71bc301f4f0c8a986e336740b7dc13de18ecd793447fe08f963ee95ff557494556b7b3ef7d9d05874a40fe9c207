{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts","webpack:///src/app/service/auth/auth.service.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","google","fireAuth","platform","router","authService","getRedirectResult","then","result","console","log","localStorage","setItem","is","login","user","authenticate","accessToken","subscribe","alert","error","signInWithRedirect","GoogleAuthProvider","signOut","removeItem","selector","template","AuthService","httpClient","base_path","api","httpOptions","headers","token","post","pipe","errorResponse","data","expiresAt","add","expires","JSON","stringify","isBefore","getExpiration","isLoggedIn","expiration","getItem","parse","statusText","providedIn"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-title >\\n  <ion-img src=\\\"./assets/img/img_login_text.png\\\" class=\\\"size_img\\\"></ion-img>\\n</ion-title>\\n<ion-content class=\\\"img_background\\\">\\n</ion-content>\\n<ion-footer class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-grid class=\\\"footer-bg\\\">\\n      <ion-row class=\\\"ion-align-items-center\\\">\\n\\n        <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n          <ion-button expand=\\\"block\\\" [hidden]=\\\"isGoogleLogin\\\" (click)=\\\"doLogin()\\\" size=\\\"large\\\" class=\\\"round\\\" color=\\\"light\\\">\\n            <ion-img src=\\\"./assets/img/icon_google.png\\\" class=\\\"gg-img\\\"></ion-img>\\n            <span p___>&nbsp; google로 로그인</span>\\n            <ion-img src=\\\"./assets/img/icon_more.png\\\" class=\\\"more-img\\\"></ion-img>\\n          </ion-button>\\n\\n          <ion-button expand=\\\"block\\\" [hidden]=\\\"!isGoogleLogin\\\" (click)=\\\"doLogout()\\\" size=\\\"large\\\" class=\\\"round\\\" color=\\\"light\\\">\\n            <ion-img src=\\\"./assets/img/icon_google.png\\\" class=\\\"gg-img\\\"></ion-img>\\n            <span p___>&nbsp; 로그 아웃</span>\\n            <ion-icon name=\\\"log-out-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n// import { GooglePlus } from '@ionic-native/google-plus/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  // providers: [\n  //   GooglePlus,\n  // ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".size_img {\\n  width: 202px;\\n  height: 144px;\\n  font-size: 14px;\\n}\\n\\n.gg-img {\\n  width: 24px;\\n  height: 24px;\\n}\\n\\n.more-img {\\n  width: 24px;\\n  height: 24px;\\n  position: absolute;\\n  right: 5px;\\n}\\n\\n.round {\\n  border-radius: 8px;\\n}\\n\\n.coler {\\n  color: #ffffff;\\n  font-weight: bold;\\n}\\n\\n.size_icon {\\n  width: 24px;\\n  height: 24px;\\n  font-size: 16px;\\n}\\n\\nion-content.img_background {\\n  --background: url('img_bg.png') 0 0/100% 100% no-repeat;\\n}\\n\\n.btn-top {\\n  margin-top: 250px;\\n}\\n\\nspan[p___] {\\n  margin-right: 48px;\\n  height: 24px;\\n  width: 113px;\\n  letter-spacing: -0.32px;\\n  font-size: 16px;\\n}\\n\\n.p__ {\\n  margin-bottom: 125px;\\n}\\n\\n.footer-bg {\\n  background: #eff7ff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0FBUkY7O0FBVUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQVBGOztBQVNBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNDLFVBQUE7QUFOSDs7QUFRQTtFQUdDLGtCQUFBO0FBUEQ7O0FBU0E7RUFDRyxjQUFBO0VBQ0EsaUJBQUE7QUFOSDs7QUFRQztFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUxIOztBQU9BO0VBQ0UsdURBQUE7QUFKRjs7QUFNQTtFQUNFLGlCQUFBO0FBSEY7O0FBT0E7RUFDQyxrQkFBQTtFQUNBLFlBQUE7RUFDRSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0FBSkg7O0FBT0E7RUFDQyxvQkFBQTtBQUpEOztBQU1BO0VBQ0MsbUJBQUE7QUFIRCIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNwYW5bcF9fX117XG4vLyAgICAgbWFyZ2luLXJpZ2h0OiAxMzBweDtcbi8vICAgICBmb250LXNpemU6IDE2cHg7XG4vLyAgICAgZm9udC1mYW1pbHk6IFwiTm90b1NhbnNDSktLUi1SZWd1bGFyXCI7XG4vLyAgICAgY29sb3I6ICMyYjJhMmE7XG4vLyAgICAgd2lkdGg6IDExM3B4O1xuLy8gICAgIGhlaWdodDogMTVweDtcbi8vICAgICBsZXR0ZXItc3BhY2luZzogLTAuMzJweDtcbi8vIH1cbi5zaXplX2ltZ3tcbiAgd2lkdGg6IDIwMnB4O1xuICBoZWlnaHQ6IDE0NHB4O1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uZ2ctaW1ne1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xufVxuLm1vcmUtaW1ne1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICByaWdodDogNXB4O1xufVxuLnJvdW5ke1xuIC8vIHdpZHRoOiAzMjhweDtcbiAvLyBoZWlnaHQ6IDU2cHg7XG4gYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLmNvbGVye1xuICAgY29sb3I6ICNmZmZmZmY7XG4gICBmb250LXdlaWdodDogYm9sZDtcbn1cbiAuc2l6ZV9pY29ue1xuICAgd2lkdGg6IDI0cHg7XG4gICBoZWlnaHQ6IDI0cHg7XG4gICBmb250LXNpemU6IDE2cHg7XG4gfVxuaW9uLWNvbnRlbnQuaW1nX2JhY2tncm91bmR7XG4gIC0tYmFja2dyb3VuZDogdXJsKC4uLy4uL2Fzc2V0cy9pbWcvaW1nX2JnLnBuZykgMCAwLzEwMCUgMTAwJSBuby1yZXBlYXQ7XG59XG4uYnRuLXRvcHtcbiAgbWFyZ2luLXRvcDogMjUwcHg7XG59XG5cbiAgXG5zcGFuW3BfX19de1xuIG1hcmdpbi1yaWdodDogNDhweDtcbiBoZWlnaHQ6IDI0cHg7XG4gICB3aWR0aDogMTEzcHg7XG4gICBsZXR0ZXItc3BhY2luZzogLTAuMzJweDtcbiAgIGZvbnQtc2l6ZTogMTZweDtcbiBcbn1cbi5wX197XG4gbWFyZ2luLWJvdHRvbTogMTI1cHg7XG59XG4uZm9vdGVyLWJne1xuIGJhY2tncm91bmQ6ICNlZmY3ZmY7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { Platform } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport { Router } from '@angular/router';\nimport { NavigationExtras } from '@angular/router';\nimport { UserService } from '../service/user/user.service';\nimport { Storage } from '@ionic/storage';\nimport { AuthService } from '../service/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(\n    private google: GooglePlus,\n    private fireAuth: AngularFireAuth,\n    private platform: Platform,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  async ngOnInit() {\n    this.fireAuth.getRedirectResult().then(result => {\n      console.log(result);\n      localStorage.setItem('token', 'result.user.accessToken');\n    })\n  }\n\n  doLogin() {\n    if (this.platform.is('cordova') && this.platform.is('android')) {\n      this.google.login({}).then(user => {\n        this.authService.authenticate(user.accessToken).subscribe(result => {\n          alert(result)\n        })\n        localStorage.setItem('token', user.accessToken);\n        // this.router.navigate(['/sign-up']);\n      }).catch((error) => {\n          alert(error)\n        });\n\n    } else {\n      this.fireAuth.signInWithRedirect(new firebase.auth.GoogleAuthProvider());\n    }\n  }\n\n  doLogout() {\n    this.fireAuth.signOut().then(() => {\n      localStorage.removeItem('token');\n    });\n  }\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  base_path = environment.api + 'authenticate';\n\n  constructor(public httpClient: HttpClient) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  public authenticate(token) {\n    return this.httpClient\n      .post(this.base_path, { token: token }, this.httpOptions )\n      .pipe(catchError(this.errorResponse))\n  }\n\n  setLocalStorage(data) {\n    const expiresAt = moment().add(data.expires[0], data.expires[1]);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt));\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expires_at');\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n    return moment(expiresAt);\n  }\n\n  errorResponse(error: HttpErrorResponse) {\n    console.log(error);\n\n    return throwError(`${error.statusText}`);\n  }\n}\n"]}